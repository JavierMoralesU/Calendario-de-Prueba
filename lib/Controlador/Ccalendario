import 'package:flutter/material.dart';
import 'package:calendario/Modelo/Cita.dart';
import 'package:calendario/Modelo/ListaCitas.dart';


class Ccalendario extends ChangeNotifier {

  DateTime _fechaActual = DateTime.now();
  DateTime? _fechaSeleccionada;
  final ListaCitas listaCitas; // Inyección de dependencia

  Ccalendario(this.listaCitas);


  // Getter y Setter para _fechaActual
  DateTime get fechaActual => _fechaActual;
  DateTime? get fechaSeleccionada => _fechaSeleccionada;

  // Cambiar mes (navegación)
  void cambiarMes(int incremento) 
  {
    _fechaActual = DateTime(_fechaActual.year, _fechaActual.month + incremento);
    notifyListeners();
  }

  // Cambiar fecha seleccionada
  void seleccionarFecha(DateTime fecha) 
  {
    _fechaSeleccionada = fecha;
    notifyListeners();
  }

  // // Actualizar las citas del calendario
  // void actualizarCitas(List<Cita> nuevasCitas) 
  // {
  //   _citas = nuevasCitas;
  //   notifyListeners();
  // }

  // Obtener el nombre del mes 
  String obtenerNombreMes(int mes) 
  {
    const nombresMeses = 
    [
      "Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio",
      "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre"
    ];
    return nombresMeses[mes - 1];
  }

  // Método para determinar el color del día basado en las citas
  Color determinarColorDia(List<Cita> citasDelDia) 
  {
    if (citasDelDia.isEmpty) return Colors.transparent;
    if (citasDelDia.length > 1) return Colors.purple;

    Cita cita = citasDelDia.first;
    int hora = cita.fecha.hour;

    if (hora >= 6 && hora < 12) return Colors.red;
    if (hora >= 12 && hora < 18) return Colors.yellow;
    return Colors.blue.shade900;
  }

  // Método para obtener las citas de un día
   List<Cita> obtenerCitasPorFecha(DateTime fecha) {
    return listaCitas.filtrar(fecha: fecha);
  }

}